@model OrderVM
@{ 
    CustomerVM customer = (CustomerVM)ViewData["customer"];
    StoreFrontVM store = (StoreFrontVM)ViewData["store"];
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
</head>
<body>
    <div id="accordion">
        <div class="card">
            <div class="card-header" id="headingOne">
                <h5 class="mb-0">
                    <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                        @store.StoreName's Inventory
                    </button>
                </h5>
            </div>

            <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Item Name</th>
                            <th>Price/Unit</th>
                            <th>Available Stock</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in store.LineItems)
                        {
                            <tr>
                                <td>@item.Product.ProductName</td>
                                <td>@item.Product.ProductPrice</td>
                                <td>@item.Quantity</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div>
                @*Will return p_storeID, p_customerID, p_amount, p_itemID for AddOrder to process through HttpPost*@
                <form asp-action="AddToOrder">
                    <label for="item">Select Item to Order:</label>
                    <select id="item" name="p_itemID">
                        @foreach (var item in store.LineItems)
                        {
                            <option value="@item.LineItemID">@item.Product.ProductName - @item.Quantity Available</option>
                        }
                    </select>
                    <label for="amount">Amount to Add: </label>
                    <input id="amount" type="number" name="p_amount" min="1" value="1" class="form-control">
                    <input type="hidden" name="p_customerID" value="@customer.CustomerID">
                    <input type="hidden" name="p_storeID" value="@store.StoreFrontID">
                    <button type="submit" class="btn btn-primary">Add to Order</button>
                </form>
            </div>
            <div>
                @if (Model.OrderItems != null)
                {
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Item Name</th>
                                <th>Price/Unit</th>
                                <th>Amount</th>
                                <th>Price</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.OrderItems)
                            {
                                <tr>
                                    <td>@item.Product.ProductName</td>
                                    <td>@item.Product.ProductPrice.ToString("C")</td>
                                    <td>@item.Quantity</td>
                                    <td>@((item.Quantity * item.Product.ProductPrice).ToString("C"))</td>
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td></td>
                                <td>Total Cost: </td>
                                <td>@Model.OrderPrice.ToString("C")</td>
                            </tr>

                        </tbody>
                    </table>

                    <div>
                        <form asp-action="PlaceOrder">
                            <button type="submit" class="btn btn-primary">Place Order</button>
                        </form>
                    </div>
                }
                @Html.ActionLink("Change Store", "ChooseStore", new { p_customerID = customer.CustomerID }, new { @class = "btn btn-secondary" })
                @Html.ActionLink("Cancel Order", "InspectCustomer", new { p_customerID = customer.CustomerID }, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
</body>
</html>